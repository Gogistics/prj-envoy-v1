load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")

filegroup(
    name = "certs",
    srcs = [
        "//utils/certs:atai-envoy.com.crt",
        "//utils/certs:atai-envoy.com.key",
    ],
)

go_library(
    name = "server_lib",
    srcs = ["server.go"],
    importpath = "github.com/Gogistics/prj-envoy-v1/services/grpc-v1/server",
    visibility = ["//visibility:public"],
    deps = [
        "//services/grpc-v1/protos",
        "@com_github_google_uuid//:uuid",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//codes",
        "@org_golang_google_grpc//credentials",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//status",
    ],
)

go_binary(
    name = "server",
    embed = [":server_lib"],
    visibility = ["//visibility:public"],
)

container_image(
    name = "grpc-query-server-v0.0.0",
    base = "@alpine_linux_amd64//image",
    entrypoint = [
        "/server",
    ],
    files = [
        ":certs",
        ":server",
    ],
    repository = "alantai/prj-envoy-v1",
)

# declare where and how the image will be published
container_push(
    name = "push-grpc-query-server",
    format = "Docker",
    image = ":grpc-query-server-v0.0.0",
    registry = "index.docker.io",
    repository = "alantai/prj-envoy-v1",
    tag = "grpc-query-server-v0.0.0",
)
